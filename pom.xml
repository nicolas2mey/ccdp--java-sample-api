<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.1</version>
        <relativePath />
    </parent>

    <groupId>com.adeo</groupId>
    <artifactId>ccdp-java-sample-api</artifactId>
    <version>0.3.20-SNAPSHOT</version>
    <name>ccdp--java-sample-api</name>
    <description>Sample Java REST API with CCDP requirements.</description>

    <organization>
        <name>Adeo - Leroy Merlin</name>
        <url>http://www.leroymerlin.fr</url>
    </organization>

    <distributionManagement>
        <repository>
            <id>adeo-artifactory-releases</id>
            <name>Adeo Artifactory Releases Repository</name>
            <url>https://adeo.jfrog.io/adeo/maven-releases</url>
        </repository>
        <snapshotRepository>
            <id>adeo-artifactory-snapshots</id>
            <name>Adeo Artifactory Snapshots Repository</name>
            <url>https://adeo.jfrog.io/adeo/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
        <url>https://github.com/adeo/ccdp--java-sample-api</url>
        <connection>scm:git:https://github.com/adeo/ccdp--java-sample-api.git</connection>
        <developerConnection>scm:git:https://github.com/adeo/ccdp--java-sample-api.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>

        <spring-cloud-starter.version>4.0.0</spring-cloud-starter.version>
        <spring-cloud-starter-vault.version>4.0.0</spring-cloud-starter-vault.version>
        <springdoc-openapi.version>1.6.14</springdoc-openapi.version>

        <lombok.version>1.18.24</lombok.version>

        <resilience4j.version>2.0.2</resilience4j.version>
        <resilience4j-prometheus.version>1.7.1</resilience4j-prometheus.version>

        <logback-contrib.version>0.1.5</logback-contrib.version>
        <logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>
        <netty-access-log-logback-json-provider.version>2.0.0</netty-access-log-logback-json-provider.version>

        <reactor-test.version>3.5.1</reactor-test.version>
        <junit.version>5.9.1</junit.version>
        <junit4.version>4.13.2</junit4.version>
        <assertj.version>3.24.1</assertj.version>
        <ok-http.version>4.10.0</ok-http.version>

        <maven-copy-rename-maven-plugin.version>1.0</maven-copy-rename-maven-plugin.version>
        <maven-git-commit-id-plugin.version>5.0.0</maven-git-commit-id-plugin.version>
        <maven-buildnumber-plugin.version>3.0.0</maven-buildnumber-plugin.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
        <maven-dependency-plugin.version>3.4.0</maven-dependency-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
        <maven-scm-plugin.version>2.0.0-M3</maven-scm-plugin.version>
        <maven-release-plugin.version>3.0.0-M7</maven-release-plugin.version>
        <maven-jacoco-plugin.version>0.8.8</maven-jacoco-plugin.version>
    </properties>

    <dependencies>
        <!-- Runtime dependencies -->

        <!--
            Here Spring dependencies versions come from spring-boot-starter-parent declarations.
            If you define another parent, you may he to explicit them.
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!-- Reactive Web extension: Mono and Flux -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- Actuator endpoints activation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- Metrics exposition -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <!-- Vault exposure -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
            <version>${spring-cloud-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-vault-config</artifactId>
            <version>${spring-cloud-starter-vault.version}</version>
        </dependency>
        <!-- Open API documentation -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webflux-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>

        <!-- Resiliency -->
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-spring-boot2</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-reactor</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-prometheus</artifactId>
            <version>${resilience4j-prometheus.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-metrics</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>

        <!-- Reduce boilerplate -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- Custom logging -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>${logback-contrib.version}</version>
        </dependency>
        <dependency>
            <groupId>com.adeo.netty</groupId>
            <artifactId>netty-access-log-logback-json-provider</artifactId>
            <version>${netty-access-log-logback-json-provider.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <version>${reactor-test.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Required for MockWebServer dependency. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit4.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-migrationsupport</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${ok-http.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${ok-http.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.coderplus.maven.plugins</groupId>
                    <artifactId>copy-rename-maven-plugin</artifactId>
                    <version>${maven-copy-rename-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>rename-sonar-project-properties</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>rename</goal>
                            </goals>
                            <configuration>
                                <sourceFile>
                                    ${project.build.directory}/sonar-project-parametrized.properties
                                </sourceFile>
                                <destinationFile>
                                    ${project.build.directory}/sonar-project.properties
                                </destinationFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Gets git branch data -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>${maven-git-commit-id-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-revision-infos</id>
                        <phase>none</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipPoms>false</skipPoms>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                </configuration>
            </plugin>

            <!-- BuildNumber plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${maven-buildnumber-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>create</goal>
                            <goal>create-timestamp</goal>
                        </goals>
                        <configuration>
                            <format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
                            <items>
                                <item>timestamp</item>
                            </items>
                        </configuration>
                    </execution>
                </executions>

                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                </configuration>
            </plugin>

            <!-- Resources plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>filter-sonar-project-properties</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>sonar-project-parametrized.properties</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compile project -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>

            <!-- Rename resources -->
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
            </plugin>

            <!-- Unit Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>

            <!-- Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Warmup and Vault are provided as samples, remove them from coverage. -->
                    <excludes>
                        <exclude>com/adeo/sample/warmup/**/*.class</exclude>
                        <exclude>com/adeo/sample/vault/**/*.class</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!--
                The 2 following plugins will build an autonomous jar and split application and its dependencies.
                Dependencies will be copies into ./target/lib folder, application in ./target folder.

                We want this application/dependencies separation because of Docker layer system.
                This way, most of the time, only the application layer will need a new layer.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.adeo.sample.SampleApplication</mainClass>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Javadoc plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Source plugin (sources attachment) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- SCM plugin (source control) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>${maven-scm-plugin.version}</version>
            </plugin>

            <!-- Release plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <useReleaseProfile>true</useReleaseProfile>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/config</directory>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/config</directory>
            </testResource>
        </testResources>

    </build>

</project>
