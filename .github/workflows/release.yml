# -----------------------------------------------------------------------------
# This workflow:
#
# - Performs a maven release.
# - Creates a new Docker image with a release tag and publish it to JFROG.
# -----------------------------------------------------------------------------
name: release

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of release (patch, minor, major)'
        required: false
        default: 'patch'

env:
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Built component name (should be the same as maven artifact id or generated jar).
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  COMPONENT_NAME: ccdp-java-sample-api
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # JFROG artifactory repositories.
  #
  # The dev Docker registry may differ considering where your team stores its
  # artifacts.
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  ADEO_PUBLIC_REGISTRY: adeo-docker-public.jfrog.io
  ADEO_RELEASE_DOCKER_REGISTRY: adeo-docker-asfr-ccdp-ops-release.jfrog.io
#env:
#  VAULT_ADDR: https://vault.factory.adeo.cloud
#  VAULT_NAMESPACE: adeo/bomp
#  ADEO_REGISTRY: adeo-docker.jfrog.io
#  ADEO_PUBLIC_REGISTRY: adeo-docker-public.jfrog.io
#  ADEO_RELEASE_DOCKER_REGISTRY: adeo-docker-adeo-bomp-release.jfrog.io
#  ADEO_DOCKER_REGISTRY_GROUP: bomp
#  TURBINE_ENVIRONMENT_PREFIX: cdp-adeo-bomp-gke-euw1
#  PRODUCT_NAME: bomp-order

jobs:
  release:
    name: Release of ${{ env.COMPONENT_NAME }}
    runs-on: ubuntu-latest
    steps:
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # Checkout current branch.
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - uses: actions/checkout@v2
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # Set up JAVA compilation environment.
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # Caches maven dependencies (avoid downloading them for every build, remember
    # build container will be destroyed after each run).
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: "${{ github.workspace }}/.m2/repository"
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # Customize Maven repositories (we use ADEO ones).
    #
    # Here, we are using repository secrets (ARTIFACTORY_USER and ARTIFACTORY_PWD)
    # to provide JFROG maven repository access.
    #
    # It may be "easier" to use Vault instead for larger projects (to have a unique secret source).
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - name: Configure maven settings
      uses: s4u/maven-settings-action@v2.4.0
      with:
        servers: '[{"id": "adeo-artifactory-releases", "username": "${{ secrets.ARTIFACTORY_USER }}", "password": "${{ secrets.ARTIFACTORY_PWD }}"},{"id": "adeo-artifactory-snapshots", "username": "${{ secrets.ARTIFACTORY_USER }}", "password": "${{ secrets.ARTIFACTORY_PWD }}"},{"id": "adeo-artifactory-mirror", "username": "${{ secrets.ARTIFACTORY_USER }}", "password": "${{ secrets.ARTIFACTORY_PWD }}"}]'
        mirrors: '[{"id": "adeo-artifactory-mirror", "name": "Adeo Artifactory Mirror Repository", "mirrorOf": "*", "url": "https://adeo.jfrog.io/adeo/maven-mirror"}]'
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    # To continue...
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -